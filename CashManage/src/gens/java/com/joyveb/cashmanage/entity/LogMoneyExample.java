package com.joyveb.cashmanage.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class LogMoneyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    *
    * @generated Sun Aug 34 17:51:59 CST 2017
    */
    protected int offset;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    *
    * @generated Sun Aug 34 17:51:59 CST 2017
    */
    protected int limit;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    */
    protected String sumCol;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    */
    protected String groupSelClause;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    */
    protected String groupByClause;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public LogMoneyExample() {
        oredCriteria = new ArrayList<Criteria>();
        offset = 0;
        limit = Integer.MAX_VALUE;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        this.offset= 0;
        this.limit= Integer.MAX_VALUE;
        this.sumCol=null;
        this.groupSelClause=null;
        this.groupByClause=null;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    *
    * @generated Sun Aug 34 17:51:59 CST 2017
    */
    public void setOffset(int offset) {
         this.offset = offset;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    *
    * @generated Sun Aug 34 17:51:59 CST 2017
    */
    public int getOffset() {
          return offset;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    *
    * @generated Sun Aug 34 17:51:59 CST 2017
    */
    public void setLimit(int limit) {
         this.limit = limit;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    *
    * @generated Sun Aug 34 17:51:59 CST 2017
    */
    public int getLimit() {
          return limit;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    */
    public void setSumCol(String sumCol) {
         this.sumCol = sumCol;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    */
    public String getSumCol() {
          return sumCol;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    */
    public void setGroupSelClause(String groupSelClause) {
         this.groupSelClause = groupSelClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    */
    public String getGroupSelClause() {
          return groupSelClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    */
    public void setGroupByClause(String groupByClause) {
         this.groupByClause = groupByClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_log_money
    */
    public String getGroupByClause() {
          return groupByClause;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUuidIsNull() {
            addCriterion("UUID is null");
            return (Criteria) this;
        }

        public Criteria andUuidIsNotNull() {
            addCriterion("UUID is not null");
            return (Criteria) this;
        }

        public Criteria andUuidEqualTo(String value) {
            addCriterion("UUID =", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotEqualTo(String value) {
            addCriterion("UUID <>", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThan(String value) {
            addCriterion("UUID >", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThanOrEqualTo(String value) {
            addCriterion("UUID >=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThan(String value) {
            addCriterion("UUID <", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThanOrEqualTo(String value) {
            addCriterion("UUID <=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLike(String value) {
            addCriterion("UUID like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotLike(String value) {
            addCriterion("UUID not like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidIn(List<String> values) {
            addCriterion("UUID in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotIn(List<String> values) {
            addCriterion("UUID not in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidBetween(String value1, String value2) {
            addCriterion("UUID between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotBetween(String value1, String value2) {
            addCriterion("UUID not between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andParentnameIsNull() {
            addCriterion("PARENTNAME is null");
            return (Criteria) this;
        }

        public Criteria andParentnameIsNotNull() {
            addCriterion("PARENTNAME is not null");
            return (Criteria) this;
        }

        public Criteria andParentnameEqualTo(String value) {
            addCriterion("PARENTNAME =", value, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameNotEqualTo(String value) {
            addCriterion("PARENTNAME <>", value, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameGreaterThan(String value) {
            addCriterion("PARENTNAME >", value, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameGreaterThanOrEqualTo(String value) {
            addCriterion("PARENTNAME >=", value, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameLessThan(String value) {
            addCriterion("PARENTNAME <", value, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameLessThanOrEqualTo(String value) {
            addCriterion("PARENTNAME <=", value, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameLike(String value) {
            addCriterion("PARENTNAME like", value, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameNotLike(String value) {
            addCriterion("PARENTNAME not like", value, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameIn(List<String> values) {
            addCriterion("PARENTNAME in", values, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameNotIn(List<String> values) {
            addCriterion("PARENTNAME not in", values, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameBetween(String value1, String value2) {
            addCriterion("PARENTNAME between", value1, value2, "parentname");
            return (Criteria) this;
        }

        public Criteria andParentnameNotBetween(String value1, String value2) {
            addCriterion("PARENTNAME not between", value1, value2, "parentname");
            return (Criteria) this;
        }

        public Criteria andAlipaynumIsNull() {
            addCriterion("ALIPAYNUM is null");
            return (Criteria) this;
        }

        public Criteria andAlipaynumIsNotNull() {
            addCriterion("ALIPAYNUM is not null");
            return (Criteria) this;
        }

        public Criteria andAlipaynumEqualTo(String value) {
            addCriterion("ALIPAYNUM =", value, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumNotEqualTo(String value) {
            addCriterion("ALIPAYNUM <>", value, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumGreaterThan(String value) {
            addCriterion("ALIPAYNUM >", value, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumGreaterThanOrEqualTo(String value) {
            addCriterion("ALIPAYNUM >=", value, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumLessThan(String value) {
            addCriterion("ALIPAYNUM <", value, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumLessThanOrEqualTo(String value) {
            addCriterion("ALIPAYNUM <=", value, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumLike(String value) {
            addCriterion("ALIPAYNUM like", value, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumNotLike(String value) {
            addCriterion("ALIPAYNUM not like", value, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumIn(List<String> values) {
            addCriterion("ALIPAYNUM in", values, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumNotIn(List<String> values) {
            addCriterion("ALIPAYNUM not in", values, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumBetween(String value1, String value2) {
            addCriterion("ALIPAYNUM between", value1, value2, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andAlipaynumNotBetween(String value1, String value2) {
            addCriterion("ALIPAYNUM not between", value1, value2, "alipaynum");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyIsNull() {
            addCriterion("EXTRACTMONEY is null");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyIsNotNull() {
            addCriterion("EXTRACTMONEY is not null");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyEqualTo(BigDecimal value) {
            addCriterion("EXTRACTMONEY =", value, "extractmoney");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyNotEqualTo(BigDecimal value) {
            addCriterion("EXTRACTMONEY <>", value, "extractmoney");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyGreaterThan(BigDecimal value) {
            addCriterion("EXTRACTMONEY >", value, "extractmoney");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EXTRACTMONEY >=", value, "extractmoney");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyLessThan(BigDecimal value) {
            addCriterion("EXTRACTMONEY <", value, "extractmoney");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EXTRACTMONEY <=", value, "extractmoney");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyIn(List<BigDecimal> values) {
            addCriterion("EXTRACTMONEY in", values, "extractmoney");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyNotIn(List<BigDecimal> values) {
            addCriterion("EXTRACTMONEY not in", values, "extractmoney");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXTRACTMONEY between", value1, value2, "extractmoney");
            return (Criteria) this;
        }

        public Criteria andExtractmoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EXTRACTMONEY not between", value1, value2, "extractmoney");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyIsNull() {
            addCriterion("RESIDUEMONEY is null");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyIsNotNull() {
            addCriterion("RESIDUEMONEY is not null");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyEqualTo(BigDecimal value) {
            addCriterion("RESIDUEMONEY =", value, "residuemoney");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyNotEqualTo(BigDecimal value) {
            addCriterion("RESIDUEMONEY <>", value, "residuemoney");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyGreaterThan(BigDecimal value) {
            addCriterion("RESIDUEMONEY >", value, "residuemoney");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RESIDUEMONEY >=", value, "residuemoney");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyLessThan(BigDecimal value) {
            addCriterion("RESIDUEMONEY <", value, "residuemoney");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RESIDUEMONEY <=", value, "residuemoney");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyIn(List<BigDecimal> values) {
            addCriterion("RESIDUEMONEY in", values, "residuemoney");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyNotIn(List<BigDecimal> values) {
            addCriterion("RESIDUEMONEY not in", values, "residuemoney");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RESIDUEMONEY between", value1, value2, "residuemoney");
            return (Criteria) this;
        }

        public Criteria andResiduemoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RESIDUEMONEY not between", value1, value2, "residuemoney");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("STATUS =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("STATUS <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("STATUS >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("STATUS >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("STATUS <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("STATUS <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("STATUS like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("STATUS not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("STATUS in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("STATUS not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andFailreasonIsNull() {
            addCriterion("FAILREASON is null");
            return (Criteria) this;
        }

        public Criteria andFailreasonIsNotNull() {
            addCriterion("FAILREASON is not null");
            return (Criteria) this;
        }

        public Criteria andFailreasonEqualTo(String value) {
            addCriterion("FAILREASON =", value, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonNotEqualTo(String value) {
            addCriterion("FAILREASON <>", value, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonGreaterThan(String value) {
            addCriterion("FAILREASON >", value, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonGreaterThanOrEqualTo(String value) {
            addCriterion("FAILREASON >=", value, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonLessThan(String value) {
            addCriterion("FAILREASON <", value, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonLessThanOrEqualTo(String value) {
            addCriterion("FAILREASON <=", value, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonLike(String value) {
            addCriterion("FAILREASON like", value, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonNotLike(String value) {
            addCriterion("FAILREASON not like", value, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonIn(List<String> values) {
            addCriterion("FAILREASON in", values, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonNotIn(List<String> values) {
            addCriterion("FAILREASON not in", values, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonBetween(String value1, String value2) {
            addCriterion("FAILREASON between", value1, value2, "failreason");
            return (Criteria) this;
        }

        public Criteria andFailreasonNotBetween(String value1, String value2) {
            addCriterion("FAILREASON not between", value1, value2, "failreason");
            return (Criteria) this;
        }

        public Criteria andExtracttimeIsNull() {
            addCriterion("EXTRACTTIME is null");
            return (Criteria) this;
        }

        public Criteria andExtracttimeIsNotNull() {
            addCriterion("EXTRACTTIME is not null");
            return (Criteria) this;
        }

        public Criteria andExtracttimeEqualTo(Long value) {
            addCriterion("EXTRACTTIME =", value, "extracttime");
            return (Criteria) this;
        }

        public Criteria andExtracttimeNotEqualTo(Long value) {
            addCriterion("EXTRACTTIME <>", value, "extracttime");
            return (Criteria) this;
        }

        public Criteria andExtracttimeGreaterThan(Long value) {
            addCriterion("EXTRACTTIME >", value, "extracttime");
            return (Criteria) this;
        }

        public Criteria andExtracttimeGreaterThanOrEqualTo(Long value) {
            addCriterion("EXTRACTTIME >=", value, "extracttime");
            return (Criteria) this;
        }

        public Criteria andExtracttimeLessThan(Long value) {
            addCriterion("EXTRACTTIME <", value, "extracttime");
            return (Criteria) this;
        }

        public Criteria andExtracttimeLessThanOrEqualTo(Long value) {
            addCriterion("EXTRACTTIME <=", value, "extracttime");
            return (Criteria) this;
        }

        public Criteria andExtracttimeIn(List<Long> values) {
            addCriterion("EXTRACTTIME in", values, "extracttime");
            return (Criteria) this;
        }

        public Criteria andExtracttimeNotIn(List<Long> values) {
            addCriterion("EXTRACTTIME not in", values, "extracttime");
            return (Criteria) this;
        }

        public Criteria andExtracttimeBetween(Long value1, Long value2) {
            addCriterion("EXTRACTTIME between", value1, value2, "extracttime");
            return (Criteria) this;
        }

        public Criteria andExtracttimeNotBetween(Long value1, Long value2) {
            addCriterion("EXTRACTTIME not between", value1, value2, "extracttime");
            return (Criteria) this;
        }

        public Criteria andDateIsNull() {
            addCriterion("DATE is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("DATE is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(String value) {
            addCriterion("DATE =", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(String value) {
            addCriterion("DATE <>", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(String value) {
            addCriterion("DATE >", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(String value) {
            addCriterion("DATE >=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThan(String value) {
            addCriterion("DATE <", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(String value) {
            addCriterion("DATE <=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLike(String value) {
            addCriterion("DATE like", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotLike(String value) {
            addCriterion("DATE not like", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateIn(List<String> values) {
            addCriterion("DATE in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<String> values) {
            addCriterion("DATE not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(String value1, String value2) {
            addCriterion("DATE between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(String value1, String value2) {
            addCriterion("DATE not between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andUuidLikeInsensitive(String value) {
            addCriterion("upper(UUID) like", value.toUpperCase(), "uuid");
            return (Criteria) this;
        }

        public Criteria andParentnameLikeInsensitive(String value) {
            addCriterion("upper(PARENTNAME) like", value.toUpperCase(), "parentname");
            return (Criteria) this;
        }

        public Criteria andAlipaynumLikeInsensitive(String value) {
            addCriterion("upper(ALIPAYNUM) like", value.toUpperCase(), "alipaynum");
            return (Criteria) this;
        }

        public Criteria andStatusLikeInsensitive(String value) {
            addCriterion("upper(STATUS) like", value.toUpperCase(), "status");
            return (Criteria) this;
        }

        public Criteria andFailreasonLikeInsensitive(String value) {
            addCriterion("upper(FAILREASON) like", value.toUpperCase(), "failreason");
            return (Criteria) this;
        }

        public Criteria andDateLikeInsensitive(String value) {
            addCriterion("upper(DATE) like", value.toUpperCase(), "date");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_log_money
     *
     * @mbggenerated do_not_delete_during_merge Sun Aug 20 17:51:59 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_log_money
     *
     * @mbggenerated Sun Aug 20 17:51:59 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}