package com.joyveb.cashmanage.entity;

import java.util.ArrayList;
import java.util.List;

public class GameInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    *
    * @generated Mon Oct 45 17:29:42 CST 2016
    */
    protected int offset;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    *
    * @generated Mon Oct 45 17:29:42 CST 2016
    */
    protected int limit;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    */
    protected String sumCol;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    */
    protected String groupSelClause;

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    */
    protected String groupByClause;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public GameInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
        offset = 0;
        limit = Integer.MAX_VALUE;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        this.offset= 0;
        this.limit= Integer.MAX_VALUE;
        this.sumCol=null;
        this.groupSelClause=null;
        this.groupByClause=null;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    *
    * @generated Mon Oct 45 17:29:42 CST 2016
    */
    public void setOffset(int offset) {
         this.offset = offset;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    *
    * @generated Mon Oct 45 17:29:42 CST 2016
    */
    public int getOffset() {
          return offset;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    *
    * @generated Mon Oct 45 17:29:42 CST 2016
    */
    public void setLimit(int limit) {
         this.limit = limit;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    *
    * @generated Mon Oct 45 17:29:42 CST 2016
    */
    public int getLimit() {
          return limit;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    */
    public void setSumCol(String sumCol) {
         this.sumCol = sumCol;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    */
    public String getSumCol() {
          return sumCol;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    */
    public void setGroupSelClause(String groupSelClause) {
         this.groupSelClause = groupSelClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    */
    public String getGroupSelClause() {
          return groupSelClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    */
    public void setGroupByClause(String groupByClause) {
         this.groupByClause = groupByClause;
    }

    /**
    * This method was generated by MyBatis Generator.
    * This method corresponds to the database table t_game_info
    */
    public String getGroupByClause() {
          return groupByClause;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andGamecodeIsNull() {
            addCriterion("GAMECODE is null");
            return (Criteria) this;
        }

        public Criteria andGamecodeIsNotNull() {
            addCriterion("GAMECODE is not null");
            return (Criteria) this;
        }

        public Criteria andGamecodeEqualTo(String value) {
            addCriterion("GAMECODE =", value, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeNotEqualTo(String value) {
            addCriterion("GAMECODE <>", value, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeGreaterThan(String value) {
            addCriterion("GAMECODE >", value, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeGreaterThanOrEqualTo(String value) {
            addCriterion("GAMECODE >=", value, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeLessThan(String value) {
            addCriterion("GAMECODE <", value, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeLessThanOrEqualTo(String value) {
            addCriterion("GAMECODE <=", value, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeLike(String value) {
            addCriterion("GAMECODE like", value, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeNotLike(String value) {
            addCriterion("GAMECODE not like", value, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeIn(List<String> values) {
            addCriterion("GAMECODE in", values, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeNotIn(List<String> values) {
            addCriterion("GAMECODE not in", values, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeBetween(String value1, String value2) {
            addCriterion("GAMECODE between", value1, value2, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamecodeNotBetween(String value1, String value2) {
            addCriterion("GAMECODE not between", value1, value2, "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamenameIsNull() {
            addCriterion("GAMENAME is null");
            return (Criteria) this;
        }

        public Criteria andGamenameIsNotNull() {
            addCriterion("GAMENAME is not null");
            return (Criteria) this;
        }

        public Criteria andGamenameEqualTo(String value) {
            addCriterion("GAMENAME =", value, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameNotEqualTo(String value) {
            addCriterion("GAMENAME <>", value, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameGreaterThan(String value) {
            addCriterion("GAMENAME >", value, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameGreaterThanOrEqualTo(String value) {
            addCriterion("GAMENAME >=", value, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameLessThan(String value) {
            addCriterion("GAMENAME <", value, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameLessThanOrEqualTo(String value) {
            addCriterion("GAMENAME <=", value, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameLike(String value) {
            addCriterion("GAMENAME like", value, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameNotLike(String value) {
            addCriterion("GAMENAME not like", value, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameIn(List<String> values) {
            addCriterion("GAMENAME in", values, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameNotIn(List<String> values) {
            addCriterion("GAMENAME not in", values, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameBetween(String value1, String value2) {
            addCriterion("GAMENAME between", value1, value2, "gamename");
            return (Criteria) this;
        }

        public Criteria andGamenameNotBetween(String value1, String value2) {
            addCriterion("GAMENAME not between", value1, value2, "gamename");
            return (Criteria) this;
        }

        public Criteria andPreviewpathIsNull() {
            addCriterion("PREVIEWPATH is null");
            return (Criteria) this;
        }

        public Criteria andPreviewpathIsNotNull() {
            addCriterion("PREVIEWPATH is not null");
            return (Criteria) this;
        }

        public Criteria andPreviewpathEqualTo(String value) {
            addCriterion("PREVIEWPATH =", value, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathNotEqualTo(String value) {
            addCriterion("PREVIEWPATH <>", value, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathGreaterThan(String value) {
            addCriterion("PREVIEWPATH >", value, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathGreaterThanOrEqualTo(String value) {
            addCriterion("PREVIEWPATH >=", value, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathLessThan(String value) {
            addCriterion("PREVIEWPATH <", value, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathLessThanOrEqualTo(String value) {
            addCriterion("PREVIEWPATH <=", value, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathLike(String value) {
            addCriterion("PREVIEWPATH like", value, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathNotLike(String value) {
            addCriterion("PREVIEWPATH not like", value, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathIn(List<String> values) {
            addCriterion("PREVIEWPATH in", values, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathNotIn(List<String> values) {
            addCriterion("PREVIEWPATH not in", values, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathBetween(String value1, String value2) {
            addCriterion("PREVIEWPATH between", value1, value2, "previewpath");
            return (Criteria) this;
        }

        public Criteria andPreviewpathNotBetween(String value1, String value2) {
            addCriterion("PREVIEWPATH not between", value1, value2, "previewpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathIsNull() {
            addCriterion("DETAILEDPATH is null");
            return (Criteria) this;
        }

        public Criteria andDetailedpathIsNotNull() {
            addCriterion("DETAILEDPATH is not null");
            return (Criteria) this;
        }

        public Criteria andDetailedpathEqualTo(String value) {
            addCriterion("DETAILEDPATH =", value, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathNotEqualTo(String value) {
            addCriterion("DETAILEDPATH <>", value, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathGreaterThan(String value) {
            addCriterion("DETAILEDPATH >", value, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathGreaterThanOrEqualTo(String value) {
            addCriterion("DETAILEDPATH >=", value, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathLessThan(String value) {
            addCriterion("DETAILEDPATH <", value, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathLessThanOrEqualTo(String value) {
            addCriterion("DETAILEDPATH <=", value, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathLike(String value) {
            addCriterion("DETAILEDPATH like", value, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathNotLike(String value) {
            addCriterion("DETAILEDPATH not like", value, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathIn(List<String> values) {
            addCriterion("DETAILEDPATH in", values, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathNotIn(List<String> values) {
            addCriterion("DETAILEDPATH not in", values, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathBetween(String value1, String value2) {
            addCriterion("DETAILEDPATH between", value1, value2, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathNotBetween(String value1, String value2) {
            addCriterion("DETAILEDPATH not between", value1, value2, "detailedpath");
            return (Criteria) this;
        }

        public Criteria andFacevalueIsNull() {
            addCriterion("FACEVALUE is null");
            return (Criteria) this;
        }

        public Criteria andFacevalueIsNotNull() {
            addCriterion("FACEVALUE is not null");
            return (Criteria) this;
        }

        public Criteria andFacevalueEqualTo(Integer value) {
            addCriterion("FACEVALUE =", value, "facevalue");
            return (Criteria) this;
        }

        public Criteria andFacevalueNotEqualTo(Integer value) {
            addCriterion("FACEVALUE <>", value, "facevalue");
            return (Criteria) this;
        }

        public Criteria andFacevalueGreaterThan(Integer value) {
            addCriterion("FACEVALUE >", value, "facevalue");
            return (Criteria) this;
        }

        public Criteria andFacevalueGreaterThanOrEqualTo(Integer value) {
            addCriterion("FACEVALUE >=", value, "facevalue");
            return (Criteria) this;
        }

        public Criteria andFacevalueLessThan(Integer value) {
            addCriterion("FACEVALUE <", value, "facevalue");
            return (Criteria) this;
        }

        public Criteria andFacevalueLessThanOrEqualTo(Integer value) {
            addCriterion("FACEVALUE <=", value, "facevalue");
            return (Criteria) this;
        }

        public Criteria andFacevalueIn(List<Integer> values) {
            addCriterion("FACEVALUE in", values, "facevalue");
            return (Criteria) this;
        }

        public Criteria andFacevalueNotIn(List<Integer> values) {
            addCriterion("FACEVALUE not in", values, "facevalue");
            return (Criteria) this;
        }

        public Criteria andFacevalueBetween(Integer value1, Integer value2) {
            addCriterion("FACEVALUE between", value1, value2, "facevalue");
            return (Criteria) this;
        }

        public Criteria andFacevalueNotBetween(Integer value1, Integer value2) {
            addCriterion("FACEVALUE not between", value1, value2, "facevalue");
            return (Criteria) this;
        }

        public Criteria andGametypeIsNull() {
            addCriterion("GAMETYPE is null");
            return (Criteria) this;
        }

        public Criteria andGametypeIsNotNull() {
            addCriterion("GAMETYPE is not null");
            return (Criteria) this;
        }

        public Criteria andGametypeEqualTo(String value) {
            addCriterion("GAMETYPE =", value, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeNotEqualTo(String value) {
            addCriterion("GAMETYPE <>", value, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeGreaterThan(String value) {
            addCriterion("GAMETYPE >", value, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeGreaterThanOrEqualTo(String value) {
            addCriterion("GAMETYPE >=", value, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeLessThan(String value) {
            addCriterion("GAMETYPE <", value, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeLessThanOrEqualTo(String value) {
            addCriterion("GAMETYPE <=", value, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeLike(String value) {
            addCriterion("GAMETYPE like", value, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeNotLike(String value) {
            addCriterion("GAMETYPE not like", value, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeIn(List<String> values) {
            addCriterion("GAMETYPE in", values, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeNotIn(List<String> values) {
            addCriterion("GAMETYPE not in", values, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeBetween(String value1, String value2) {
            addCriterion("GAMETYPE between", value1, value2, "gametype");
            return (Criteria) this;
        }

        public Criteria andGametypeNotBetween(String value1, String value2) {
            addCriterion("GAMETYPE not between", value1, value2, "gametype");
            return (Criteria) this;
        }

        public Criteria andGamepriceIsNull() {
            addCriterion("GAMEPRICE is null");
            return (Criteria) this;
        }

        public Criteria andGamepriceIsNotNull() {
            addCriterion("GAMEPRICE is not null");
            return (Criteria) this;
        }

        public Criteria andGamepriceEqualTo(Integer value) {
            addCriterion("GAMEPRICE =", value, "gameprice");
            return (Criteria) this;
        }

        public Criteria andGamepriceNotEqualTo(Integer value) {
            addCriterion("GAMEPRICE <>", value, "gameprice");
            return (Criteria) this;
        }

        public Criteria andGamepriceGreaterThan(Integer value) {
            addCriterion("GAMEPRICE >", value, "gameprice");
            return (Criteria) this;
        }

        public Criteria andGamepriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("GAMEPRICE >=", value, "gameprice");
            return (Criteria) this;
        }

        public Criteria andGamepriceLessThan(Integer value) {
            addCriterion("GAMEPRICE <", value, "gameprice");
            return (Criteria) this;
        }

        public Criteria andGamepriceLessThanOrEqualTo(Integer value) {
            addCriterion("GAMEPRICE <=", value, "gameprice");
            return (Criteria) this;
        }

        public Criteria andGamepriceIn(List<Integer> values) {
            addCriterion("GAMEPRICE in", values, "gameprice");
            return (Criteria) this;
        }

        public Criteria andGamepriceNotIn(List<Integer> values) {
            addCriterion("GAMEPRICE not in", values, "gameprice");
            return (Criteria) this;
        }

        public Criteria andGamepriceBetween(Integer value1, Integer value2) {
            addCriterion("GAMEPRICE between", value1, value2, "gameprice");
            return (Criteria) this;
        }

        public Criteria andGamepriceNotBetween(Integer value1, Integer value2) {
            addCriterion("GAMEPRICE not between", value1, value2, "gameprice");
            return (Criteria) this;
        }

        public Criteria andGamecodeLikeInsensitive(String value) {
            addCriterion("upper(GAMECODE) like", value.toUpperCase(), "gamecode");
            return (Criteria) this;
        }

        public Criteria andGamenameLikeInsensitive(String value) {
            addCriterion("upper(GAMENAME) like", value.toUpperCase(), "gamename");
            return (Criteria) this;
        }

        public Criteria andPreviewpathLikeInsensitive(String value) {
            addCriterion("upper(PREVIEWPATH) like", value.toUpperCase(), "previewpath");
            return (Criteria) this;
        }

        public Criteria andDetailedpathLikeInsensitive(String value) {
            addCriterion("upper(DETAILEDPATH) like", value.toUpperCase(), "detailedpath");
            return (Criteria) this;
        }

        public Criteria andGametypeLikeInsensitive(String value) {
            addCriterion("upper(GAMETYPE) like", value.toUpperCase(), "gametype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_game_info
     *
     * @mbggenerated do_not_delete_during_merge Mon Oct 31 17:29:42 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_game_info
     *
     * @mbggenerated Mon Oct 31 17:29:42 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}