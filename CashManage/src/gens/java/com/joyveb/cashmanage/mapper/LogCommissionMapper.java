package com.joyveb.cashmanage.mapper;

import com.joyveb.cashmanage.entity.LogCommission;
import com.joyveb.cashmanage.entity.LogCommissionExample;
import com.joyveb.cashmanage.entity.LogCommissionKey;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface LogCommissionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @SelectProvider(type=LogCommissionSqlProvider.class, method="countByExample")
    int countByExample(LogCommissionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @DeleteProvider(type=LogCommissionSqlProvider.class, method="deleteByExample")
    int deleteByExample(LogCommissionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @Delete({
        "delete from t_log_commission",
        "where UUID = #{uuid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(LogCommissionKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @Insert({
        "insert into t_log_commission (UUID, PARENTNAME, ",
        "SECONDNAME, MONEY, ",
        "ORDERTIME, STATUS, DATE)",
        "values (#{uuid,jdbcType=VARCHAR}, #{parentname,jdbcType=VARCHAR}, ",
        "#{secondname,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, ",
        "#{ordertime,jdbcType=BIGINT}, #{status,jdbcType=CHAR}, #{date,jdbcType=VARCHAR})"
    })
    int insert(LogCommission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @InsertProvider(type=LogCommissionSqlProvider.class, method="insertSelective")
    int insertSelective(LogCommission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @SelectProvider(type=LogCommissionSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="UUID", property="uuid", jdbcType= JdbcType.VARCHAR, id=true),
        @Result(column="PARENTNAME", property="parentname", jdbcType= JdbcType.VARCHAR),
        @Result(column="SECONDNAME", property="secondname", jdbcType= JdbcType.VARCHAR),
        @Result(column="MONEY", property="money", jdbcType= JdbcType.DECIMAL),
        @Result(column="ORDERTIME", property="ordertime", jdbcType= JdbcType.BIGINT),
        @Result(column="STATUS", property="status", jdbcType= JdbcType.CHAR),
        @Result(column="DATE", property="date", jdbcType= JdbcType.VARCHAR)
    })
    List<LogCommission> selectByExample(LogCommissionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @Select({
        "select",
        "UUID, PARENTNAME, SECONDNAME, MONEY, ORDERTIME, STATUS, DATE",
        "from t_log_commission",
        "where UUID = #{uuid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="UUID", property="uuid", jdbcType= JdbcType.VARCHAR, id=true),
        @Result(column="PARENTNAME", property="parentname", jdbcType= JdbcType.VARCHAR),
        @Result(column="SECONDNAME", property="secondname", jdbcType= JdbcType.VARCHAR),
        @Result(column="MONEY", property="money", jdbcType= JdbcType.DECIMAL),
        @Result(column="ORDERTIME", property="ordertime", jdbcType= JdbcType.BIGINT),
        @Result(column="STATUS", property="status", jdbcType= JdbcType.CHAR),
        @Result(column="DATE", property="date", jdbcType= JdbcType.VARCHAR)
    })
    LogCommission selectByPrimaryKey(LogCommissionKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @UpdateProvider(type=LogCommissionSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") LogCommission record, @Param("example") LogCommissionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @UpdateProvider(type=LogCommissionSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") LogCommission record, @Param("example") LogCommissionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @UpdateProvider(type=LogCommissionSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(LogCommission record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_log_commission
     *
     * @mbggenerated Sun Aug 20 17:47:46 CST 2017
     */
    @Update({
        "update t_log_commission",
        "set PARENTNAME = #{parentname,jdbcType=VARCHAR},",
          "SECONDNAME = #{secondname,jdbcType=VARCHAR},",
          "MONEY = #{money,jdbcType=DECIMAL},",
          "ORDERTIME = #{ordertime,jdbcType=BIGINT},",
          "STATUS = #{status,jdbcType=CHAR},",
          "DATE = #{date,jdbcType=VARCHAR}",
        "where UUID = #{uuid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(LogCommission record);
}